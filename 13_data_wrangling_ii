{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ayportella/data_analytics/blob/main/13_data_wrangling_ii\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KJqp9AANOCtf"
      },
      "source": [
        "<img src=\"https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png\" alt=\"ebac-logo\">\n",
        "\n",
        "---\n",
        "\n",
        "# **Módulo** | Análise de Dados: Data Wrangling II\n",
        "Caderno de **Exercícios**<br> \n",
        "Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)\n",
        "\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d9jDtUbDOE1-"
      },
      "source": [
        "# **Tópicos**\n",
        "\n",
        "<ol type=\"1\">\n",
        "  <li>Agregação e Ordenação;</li>\n",
        "  <li>Combinação;</li>\n",
        "  <li>Técnicas Avançadas.</li>\n",
        "</ol>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SmoHgt-lwkpD"
      },
      "source": [
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GABI6OW8OfQ2"
      },
      "source": [
        "# **Exercícios**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "45DbYPgFhuR7"
      },
      "source": [
        "Neste exercícios, vamos trabalhar com dados geográficos, demográficos e econômicos do Brasil. Vamos manipular e combinar dados de duas frentes distintas para poder responder perguntas de negócios."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GWgNoJN8DHyY"
      },
      "source": [
        "## 1\\. Data Wrangling"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E30KnCdKRdYl"
      },
      "source": [
        "### **1.1. Estados** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w2q1apyNYHbu"
      },
      "source": [
        "O arquivo `estados-bruto.xml` contém informações sobre estados (nome, sigla e região). **Carregue-o na máquina virtual do Google Colab**. Um arquivo do tipo XML é similar a um arquivo do tipo HTML, exemplo do estado do Acre:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GzjE2aEyYW5A"
      },
      "source": [
        "```xml\n",
        "<ESTADO>\n",
        "  <ID>1</ID>\n",
        "  <NOME>ACRE</NOME>\n",
        "  <IDCAPITAL>16</IDCAPITAL>\n",
        "  <SIGLA>AC</SIGLA>\n",
        "  <REGIAO>NORTE</REGIAO>\n",
        "</ESTADO>\n",
        "```"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7Mtk7Dd9UHqg"
      },
      "source": [
        "Utilize o pacote Python `beautifulsoup4` para extrair os dados do arquivo `estados-bruto.xml` providenciado. Salve os dados extraidos no arquivo `estados-limpo.csv` separado por `;`. Exemplo das três primeiras linhas mais o cabeçalho:\n",
        "\n",
        "```\n",
        "estado;sigla;regiao\n",
        "ACRE;AC;NORTE\n",
        "ALAGOAS;AL;NORDESTE\n",
        "AMAPA;AP;NORTE\n",
        "```\n",
        "\n",
        "**Dica**: Utilize o parser de xml chamado `lxml` do `beautifulsoup4`."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kz0ZyYI0Sg6P"
      },
      "source": [
        "# ler o arquivo estados-bruto.xml, utilize o xml parser chamado lxml\n",
        "import requests\n",
        "\n",
        "URL = 'https://static.lms.ebaconline.com.br/content-files/8c8d1912-fa5e-4612-b7f6-568301a125bc/original.xml'\n",
        "\n",
        "url_link = requests.get(URL)\n",
        "\n",
        "from bs4 import BeautifulSoup\n",
        "NOME_ARQUIVO_FONTE = 'estados-bruto.xml'\n",
        "\n",
        "fonte = BeautifulSoup(url_link.text, 'lxml')\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rB0u2NjEXhDo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "da36f9a2-15ba-46a9-dcf3-aaf130ca0cb8"
      },
      "source": [
        "# visualize os resultados\n",
        "\n",
        "fonte"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<?xml version=\"1.0\" encoding=\"utf-8\" ?><html><body><estados>\n",
              "<estado>\n",
              "<id>1</id>\n",
              "<nome>ACRE</nome>\n",
              "<idcapital>16</idcapital>\n",
              "<sigla>AC</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>2</id>\n",
              "<nome>ALAGOAS</nome>\n",
              "<idcapital>68</idcapital>\n",
              "<sigla>AL</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>3</id>\n",
              "<nome>AMAPA</nome>\n",
              "<idcapital>131</idcapital>\n",
              "<sigla>AP</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>4</id>\n",
              "<nome>AMAZONAS</nome>\n",
              "<idcapital>178</idcapital>\n",
              "<sigla>AM</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>5</id>\n",
              "<nome>BAHIA</nome>\n",
              "<idcapital>536</idcapital>\n",
              "<sigla>BA</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>6</id>\n",
              "<nome>CEARA</nome>\n",
              "<idcapital>676</idcapital>\n",
              "<sigla>CE</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>7</id>\n",
              "<nome>DISTRITO FEDERAL</nome>\n",
              "<idcapital>916</idcapital>\n",
              "<sigla>DF</sigla>\n",
              "<regiao>CENTRO-OESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>8</id>\n",
              "<nome>ESPIRITO SANTO</nome>\n",
              "<idcapital>879</idcapital>\n",
              "<sigla>ES</sigla>\n",
              "<regiao>SUDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>9</id>\n",
              "<nome>GOIAS</nome>\n",
              "<idcapital>973</idcapital>\n",
              "<sigla>GO</sigla>\n",
              "<regiao>CENTRO-OESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>10</id>\n",
              "<nome>MARANHAO</nome>\n",
              "<idcapital>1309</idcapital>\n",
              "<sigla>MA</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>11</id>\n",
              "<nome>MATO GROSSO</nome>\n",
              "<idcapital>1374</idcapital>\n",
              "<sigla>MT</sigla>\n",
              "<regiao>CENTRO-OESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>12</id>\n",
              "<nome>MATO GROSSO DO SUL</nome>\n",
              "<idcapital>1485</idcapital>\n",
              "<sigla>MS</sigla>\n",
              "<regiao>CENTRO-OESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>13</id>\n",
              "<nome>PARA</nome>\n",
              "<idcapital>1561</idcapital>\n",
              "<sigla>PA</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>14</id>\n",
              "<nome>PARAIBA</nome>\n",
              "<idcapital>1779</idcapital>\n",
              "<sigla>PB</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>15</id>\n",
              "<nome>PARANA</nome>\n",
              "<idcapital>2002</idcapital>\n",
              "<sigla>PR</sigla>\n",
              "<regiao>SUL</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>16</id>\n",
              "<nome>PERNAMBUCO</nome>\n",
              "<idcapital>2439</idcapital>\n",
              "<sigla>PE</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>17</id>\n",
              "<nome>PIAUI</nome>\n",
              "<idcapital>2704</idcapital>\n",
              "<sigla>PI</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>18</id>\n",
              "<nome>RIO DE JANEIRO</nome>\n",
              "<idcapital>2779</idcapital>\n",
              "<sigla>RJ</sigla>\n",
              "<regiao>SUDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>19</id>\n",
              "<nome>RIO GRANDE DO NORTE</nome>\n",
              "<idcapital>2890</idcapital>\n",
              "<sigla>RN</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>20</id>\n",
              "<nome>RIO GRANDE DO SUL</nome>\n",
              "<idcapital>3273</idcapital>\n",
              "<sigla>RS</sigla>\n",
              "<regiao>SUL</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>21</id>\n",
              "<nome>RONDONIA</nome>\n",
              "<idcapital>3473</idcapital>\n",
              "<sigla>RO</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>22</id>\n",
              "<nome>RORAIMA</nome>\n",
              "<idcapital>3491</idcapital>\n",
              "<sigla>RR</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>23</id>\n",
              "<nome>SANTA CATARINA</nome>\n",
              "<idcapital>3591</idcapital>\n",
              "<sigla>SC</sigla>\n",
              "<regiao>SUL</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>24</id>\n",
              "<nome>SAO PAULO</nome>\n",
              "<idcapital>4361</idcapital>\n",
              "<sigla>SP</sigla>\n",
              "<regiao>SUDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>25</id>\n",
              "<nome>SERGIPE</nome>\n",
              "<idcapital>4444</idcapital>\n",
              "<sigla>SE</sigla>\n",
              "<regiao>NORDESTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>26</id>\n",
              "<nome>TOCANTINS</nome>\n",
              "<idcapital>4606</idcapital>\n",
              "<sigla>TO</sigla>\n",
              "<regiao>NORTE</regiao>\n",
              "</estado>\n",
              "<estado>\n",
              "<id>27</id>\n",
              "<nome>MINAS GERAIS</nome>\n",
              "<idcapital>4790</idcapital>\n",
              "<sigla>MG</sigla>\n",
              "<regiao>SUDESTE</regiao>\n",
              "</estado>\n",
              "</estados>\n",
              "</body></html>"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6mos3LTVXrzV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d1f64b89-9fe5-4a23-d852-87864515eb89"
      },
      "source": [
        "# manipule os dados\n",
        "estados = fonte.find_all(\"nome\")\n",
        "estados = [estado.string for estado in estados]\n",
        "\n",
        "siglas = fonte.find_all(\"sigla\")\n",
        "siglas = [sigla.string for sigla in siglas]\n",
        "\n",
        "regioes = fonte.find_all(\"regiao\")\n",
        "regioes = [regiao.string for regiao in regioes]\n",
        "\n",
        "print(estados)\n",
        "print(siglas)\n",
        "print(regioes)\n",
        "\n",
        "# continue o codigo aqui"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['ACRE', 'ALAGOAS', 'AMAPA', 'AMAZONAS', 'BAHIA', 'CEARA', 'DISTRITO FEDERAL', 'ESPIRITO SANTO', 'GOIAS', 'MARANHAO', 'MATO GROSSO', 'MATO GROSSO DO SUL', 'PARA', 'PARAIBA', 'PARANA', 'PERNAMBUCO', 'PIAUI', 'RIO DE JANEIRO', 'RIO GRANDE DO NORTE', 'RIO GRANDE DO SUL', 'RONDONIA', 'RORAIMA', 'SANTA CATARINA', 'SAO PAULO', 'SERGIPE', 'TOCANTINS', 'MINAS GERAIS']\n",
            "['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO', 'MG']\n",
            "['NORTE', 'NORDESTE', 'NORTE', 'NORTE', 'NORDESTE', 'NORDESTE', 'CENTRO-OESTE', 'SUDESTE', 'CENTRO-OESTE', 'NORDESTE', 'CENTRO-OESTE', 'CENTRO-OESTE', 'NORTE', 'NORDESTE', 'SUL', 'NORDESTE', 'NORDESTE', 'SUDESTE', 'NORDESTE', 'SUL', 'NORTE', 'NORTE', 'SUL', 'SUDESTE', 'NORDESTE', 'NORTE', 'SUDESTE']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9yCma_LASxFg"
      },
      "source": [
        "# escrever o conteudo extraido no arquivo estados-limpo.csv separados por ;\n",
        "import pandas as pd\n",
        "\n",
        "NOME_ARQUIVO_DESTINO = 'estados-limpo.csv'\n",
        "\n",
        "estados_dic = {\n",
        "    \"estado\": estados,\n",
        "    \"sigla\": siglas,\n",
        "    \"regiao\": regioes,\n",
        "}\n",
        "\n",
        "estados_df= pd.DataFrame(estados_dic)\n",
        "\n",
        "estados_df.to_csv(NOME_ARQUIVO_DESTINO, index=False, sep=\";\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "estados_df.to_csv"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ea5B-unejsK7",
        "outputId": "47d6628b-2a5c-46e3-e19f-a1d5be722d20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method NDFrame.to_csv of                  estado sigla        regiao\n",
              "0                  ACRE    AC         NORTE\n",
              "1               ALAGOAS    AL      NORDESTE\n",
              "2                 AMAPA    AP         NORTE\n",
              "3              AMAZONAS    AM         NORTE\n",
              "4                 BAHIA    BA      NORDESTE\n",
              "5                 CEARA    CE      NORDESTE\n",
              "6      DISTRITO FEDERAL    DF  CENTRO-OESTE\n",
              "7        ESPIRITO SANTO    ES       SUDESTE\n",
              "8                 GOIAS    GO  CENTRO-OESTE\n",
              "9              MARANHAO    MA      NORDESTE\n",
              "10          MATO GROSSO    MT  CENTRO-OESTE\n",
              "11   MATO GROSSO DO SUL    MS  CENTRO-OESTE\n",
              "12                 PARA    PA         NORTE\n",
              "13              PARAIBA    PB      NORDESTE\n",
              "14               PARANA    PR           SUL\n",
              "15           PERNAMBUCO    PE      NORDESTE\n",
              "16                PIAUI    PI      NORDESTE\n",
              "17       RIO DE JANEIRO    RJ       SUDESTE\n",
              "18  RIO GRANDE DO NORTE    RN      NORDESTE\n",
              "19    RIO GRANDE DO SUL    RS           SUL\n",
              "20             RONDONIA    RO         NORTE\n",
              "21              RORAIMA    RR         NORTE\n",
              "22       SANTA CATARINA    SC           SUL\n",
              "23            SAO PAULO    SP       SUDESTE\n",
              "24              SERGIPE    SE      NORDESTE\n",
              "25            TOCANTINS    TO         NORTE\n",
              "26         MINAS GERAIS    MG       SUDESTE>"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Fq0xqYYSYq92"
      },
      "source": [
        "### **1.2. Cidades** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eWRbjhOQYq93"
      },
      "source": [
        "O arquivo `cidades-bruto.csv` contém informações demográficas e socioeconomicas das cidades do Brasil. **Carregue-o na máquina virtual do Google Colab**. Utilize o pacote Python `pandas` para extrair os dados do arquivo `cidades-bruto.xml` providenciado. Seguindo as seguintes especificações:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "76zW8sMsbhEu"
      },
      "source": [
        "1. Apenas dados do censo de 2010;\n",
        "1. Apenas as colunas UF, Nome, PIB, Pop_est_2009 e PIB_percapita."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "auiIxlw-blp8"
      },
      "source": [
        "Salve os dados extraidos no arquivo `cidades-limpo.csv` separado por `;`. Exemplo das três primeiras linhas mais o cabeçalho:\n",
        "\n",
        "```\n",
        "estado;cidade;populacao;pib;pib_percapita\n",
        "BAHIA;TREMEDAL;18433;57883.9921875;3140.23999023\n",
        "RIO GRANDE DO SUL;TURUÇU;4000;45723875;11430.96972656\n",
        "ESPIRITO SANTO;VITÓRIA;320156;19782628;61790.58984375\n",
        "```"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nBmWOkvzYq94"
      },
      "source": [
        "# primeiro adicionei o arquivo cidades-bruto.csv a partir de upload da minha máquina\n",
        "# ler o arquivo cidades-bruto.csv\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "NOME_ARQUIVO_FONTE = 'cidades-bruto.csv'\n",
        "\n",
        "fonte = pd.read_csv(NOME_ARQUIVO_FONTE)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2NKpI4h9Yq95",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "outputId": "3113b5e5-8279-4bf8-f60a-4f1ee8c50c6d"
      },
      "source": [
        "# visualize os resultados\n",
        "fonte.head()\n",
        "\n",
        "# continue o codigo aqui"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                               FID   gid                 UF  \\\n",
              "0  vw_pib_percapita.fid-4514e25a_17aaa325034_-258f   215              BAHIA   \n",
              "1  vw_pib_percapita.fid-4514e25a_17aaa325034_-258e   306  RIO GRANDE DO SUL   \n",
              "2  vw_pib_percapita.fid-4514e25a_17aaa325034_-258d   900     ESPIRITO SANTO   \n",
              "3  vw_pib_percapita.fid-4514e25a_17aaa325034_-258c  3613       MINAS GERAIS   \n",
              "4  vw_pib_percapita.fid-4514e25a_17aaa325034_-258b  1028              PIAUÍ   \n",
              "\n",
              "        nome   Censo           PIB  Pop_est_2009  PIB_percapita  \\\n",
              "0   Tremedal  2010.0  5.788399e+04         18433    3140.239990   \n",
              "1     Turuçu  2010.0  4.572388e+04          4000   11430.969727   \n",
              "2    Vitória  2010.0  1.978263e+07        320156   61790.589844   \n",
              "3  Jacutinga  2010.0  2.478160e+05         21424   11567.209961   \n",
              "4    Nazária  2010.0  2.095138e+04          7895    2653.750000   \n",
              "\n",
              "                          Descrição               legenda  classe  \\\n",
              "0  Produto Interno Bruto per capita             - 9639.65       1   \n",
              "1  Produto Interno Bruto per capita    9639.65 - 22144.80       2   \n",
              "2  Produto Interno Bruto per capita  52702.10 - 133669.00       4   \n",
              "3  Produto Interno Bruto per capita    9639.65 - 22144.80       2   \n",
              "4  Produto Interno Bruto per capita             - 9639.65       1   \n",
              "\n",
              "                                                geom  \n",
              "0  MULTIPOLYGON (((-41.458803305191566 -14.781415...  \n",
              "1  MULTIPOLYGON (((-52.035349932081274 -31.567509...  \n",
              "2  MULTIPOLYGON (((-40.3292566978242 -20.23997417...  \n",
              "3  MULTIPOLYGON (((-46.50528160015326 -22.3400120...  \n",
              "4  POLYGON ((-42.826685407155495 -5.3480291684437...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fb13fd5c-fd4c-4680-8905-2ae6bd4009cc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FID</th>\n",
              "      <th>gid</th>\n",
              "      <th>UF</th>\n",
              "      <th>nome</th>\n",
              "      <th>Censo</th>\n",
              "      <th>PIB</th>\n",
              "      <th>Pop_est_2009</th>\n",
              "      <th>PIB_percapita</th>\n",
              "      <th>Descrição</th>\n",
              "      <th>legenda</th>\n",
              "      <th>classe</th>\n",
              "      <th>geom</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>vw_pib_percapita.fid-4514e25a_17aaa325034_-258f</td>\n",
              "      <td>215</td>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Tremedal</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>5.788399e+04</td>\n",
              "      <td>18433</td>\n",
              "      <td>3140.239990</td>\n",
              "      <td>Produto Interno Bruto per capita</td>\n",
              "      <td>- 9639.65</td>\n",
              "      <td>1</td>\n",
              "      <td>MULTIPOLYGON (((-41.458803305191566 -14.781415...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>vw_pib_percapita.fid-4514e25a_17aaa325034_-258e</td>\n",
              "      <td>306</td>\n",
              "      <td>RIO GRANDE DO SUL</td>\n",
              "      <td>Turuçu</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>4.572388e+04</td>\n",
              "      <td>4000</td>\n",
              "      <td>11430.969727</td>\n",
              "      <td>Produto Interno Bruto per capita</td>\n",
              "      <td>9639.65 - 22144.80</td>\n",
              "      <td>2</td>\n",
              "      <td>MULTIPOLYGON (((-52.035349932081274 -31.567509...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>vw_pib_percapita.fid-4514e25a_17aaa325034_-258d</td>\n",
              "      <td>900</td>\n",
              "      <td>ESPIRITO SANTO</td>\n",
              "      <td>Vitória</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>1.978263e+07</td>\n",
              "      <td>320156</td>\n",
              "      <td>61790.589844</td>\n",
              "      <td>Produto Interno Bruto per capita</td>\n",
              "      <td>52702.10 - 133669.00</td>\n",
              "      <td>4</td>\n",
              "      <td>MULTIPOLYGON (((-40.3292566978242 -20.23997417...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>vw_pib_percapita.fid-4514e25a_17aaa325034_-258c</td>\n",
              "      <td>3613</td>\n",
              "      <td>MINAS GERAIS</td>\n",
              "      <td>Jacutinga</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>2.478160e+05</td>\n",
              "      <td>21424</td>\n",
              "      <td>11567.209961</td>\n",
              "      <td>Produto Interno Bruto per capita</td>\n",
              "      <td>9639.65 - 22144.80</td>\n",
              "      <td>2</td>\n",
              "      <td>MULTIPOLYGON (((-46.50528160015326 -22.3400120...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>vw_pib_percapita.fid-4514e25a_17aaa325034_-258b</td>\n",
              "      <td>1028</td>\n",
              "      <td>PIAUÍ</td>\n",
              "      <td>Nazária</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>2.095138e+04</td>\n",
              "      <td>7895</td>\n",
              "      <td>2653.750000</td>\n",
              "      <td>Produto Interno Bruto per capita</td>\n",
              "      <td>- 9639.65</td>\n",
              "      <td>1</td>\n",
              "      <td>POLYGON ((-42.826685407155495 -5.3480291684437...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb13fd5c-fd4c-4680-8905-2ae6bd4009cc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fb13fd5c-fd4c-4680-8905-2ae6bd4009cc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fb13fd5c-fd4c-4680-8905-2ae6bd4009cc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BRVLwHxHYq96",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "75453ec4-0407-43da-980f-474078a3d814"
      },
      "source": [
        "fonte.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 5566 entries, 0 to 5565\n",
            "Data columns (total 12 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   FID            5566 non-null   object \n",
            " 1   gid            5566 non-null   int64  \n",
            " 2   UF             5566 non-null   object \n",
            " 3   nome           5565 non-null   object \n",
            " 4   Censo          5560 non-null   float64\n",
            " 5   PIB            5566 non-null   float64\n",
            " 6   Pop_est_2009   5566 non-null   int64  \n",
            " 7   PIB_percapita  5566 non-null   float64\n",
            " 8   Descrição      5566 non-null   object \n",
            " 9   legenda        5566 non-null   object \n",
            " 10  classe         5566 non-null   int64  \n",
            " 11  geom           5566 non-null   object \n",
            "dtypes: float64(3), int64(3), object(6)\n",
            "memory usage: 521.9+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fonte.describe().T"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "LO4JiIYe0j1j",
        "outputId": "af7f35c3-c98e-4c3a-a576-bc5d5a3c3774"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                count           mean           std          min           25%  \\\n",
              "gid            5566.0    2785.319080  1.607194e+03     1.000000   1394.250000   \n",
              "Censo          5560.0    2009.997302  8.993165e-02  2007.000000   2010.000000   \n",
              "PIB            5566.0  582020.311925  6.345809e+06  5770.282227  38428.172852   \n",
              "Pop_est_2009   5566.0   34405.572763  2.017854e+05   837.000000   5339.250000   \n",
              "PIB_percapita  5566.0   10977.027151  1.214959e+04  1929.969971   4517.802368   \n",
              "classe         5566.0       1.521380  6.711827e-01     1.000000      1.000000   \n",
              "\n",
              "                        50%            75%           max  \n",
              "gid             2785.500000    4176.750000  5.568000e+03  \n",
              "Censo           2010.000000    2010.000000  2.010000e+03  \n",
              "PIB            80591.722656  206276.042969  3.893172e+08  \n",
              "Pop_est_2009   11203.000000   23252.750000  1.103759e+07  \n",
              "PIB_percapita   8393.169922   13314.827637  3.608158e+05  \n",
              "classe             1.000000       2.000000  5.000000e+00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6a3ec88d-a2dc-4f61-aa91-cec8f455389e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "      <th>mean</th>\n",
              "      <th>std</th>\n",
              "      <th>min</th>\n",
              "      <th>25%</th>\n",
              "      <th>50%</th>\n",
              "      <th>75%</th>\n",
              "      <th>max</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>gid</th>\n",
              "      <td>5566.0</td>\n",
              "      <td>2785.319080</td>\n",
              "      <td>1.607194e+03</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1394.250000</td>\n",
              "      <td>2785.500000</td>\n",
              "      <td>4176.750000</td>\n",
              "      <td>5.568000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Censo</th>\n",
              "      <td>5560.0</td>\n",
              "      <td>2009.997302</td>\n",
              "      <td>8.993165e-02</td>\n",
              "      <td>2007.000000</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>2.010000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PIB</th>\n",
              "      <td>5566.0</td>\n",
              "      <td>582020.311925</td>\n",
              "      <td>6.345809e+06</td>\n",
              "      <td>5770.282227</td>\n",
              "      <td>38428.172852</td>\n",
              "      <td>80591.722656</td>\n",
              "      <td>206276.042969</td>\n",
              "      <td>3.893172e+08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Pop_est_2009</th>\n",
              "      <td>5566.0</td>\n",
              "      <td>34405.572763</td>\n",
              "      <td>2.017854e+05</td>\n",
              "      <td>837.000000</td>\n",
              "      <td>5339.250000</td>\n",
              "      <td>11203.000000</td>\n",
              "      <td>23252.750000</td>\n",
              "      <td>1.103759e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PIB_percapita</th>\n",
              "      <td>5566.0</td>\n",
              "      <td>10977.027151</td>\n",
              "      <td>1.214959e+04</td>\n",
              "      <td>1929.969971</td>\n",
              "      <td>4517.802368</td>\n",
              "      <td>8393.169922</td>\n",
              "      <td>13314.827637</td>\n",
              "      <td>3.608158e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>classe</th>\n",
              "      <td>5566.0</td>\n",
              "      <td>1.521380</td>\n",
              "      <td>6.711827e-01</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>5.000000e+00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a3ec88d-a2dc-4f61-aa91-cec8f455389e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6a3ec88d-a2dc-4f61-aa91-cec8f455389e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6a3ec88d-a2dc-4f61-aa91-cec8f455389e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#colunas de interesse\n",
        "cidades_df = fonte.query('Censo == 2010')[['UF', 'nome', 'Pop_est_2009', 'PIB', 'PIB_percapita']]"
      ],
      "metadata": {
        "id": "WtGibqJC08ZE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# renomeando para estado;cidade;populacao;pib;pib_percapita\n",
        "cidades_df = cidades_df.rename(columns={\"UF\": \"estado\", \"nome\": \"cidade\", \"Pop_est_2009\": \"populacao\", \"PIB\": \"pib\", \"PIB_percapita\": \"pib_percapita\"})"
      ],
      "metadata": {
        "id": "UKM-CThN2v07"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cidades_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "FejExB5n2X-Z",
        "outputId": "347411ab-7a1d-433b-d45c-065f4ed71d30"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              estado     cidade  populacao           pib  pib_percapita\n",
              "0              BAHIA   Tremedal      18433  5.788399e+04    3140.239990\n",
              "1  RIO GRANDE DO SUL     Turuçu       4000  4.572388e+04   11430.969727\n",
              "2     ESPIRITO SANTO    Vitória     320156  1.978263e+07   61790.589844\n",
              "3       MINAS GERAIS  Jacutinga      21424  2.478160e+05   11567.209961\n",
              "4              PIAUÍ    Nazária       7895  2.095138e+04    2653.750000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-03afb063-4997-4c26-b330-33421fd475f2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>estado</th>\n",
              "      <th>cidade</th>\n",
              "      <th>populacao</th>\n",
              "      <th>pib</th>\n",
              "      <th>pib_percapita</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Tremedal</td>\n",
              "      <td>18433</td>\n",
              "      <td>5.788399e+04</td>\n",
              "      <td>3140.239990</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>RIO GRANDE DO SUL</td>\n",
              "      <td>Turuçu</td>\n",
              "      <td>4000</td>\n",
              "      <td>4.572388e+04</td>\n",
              "      <td>11430.969727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>ESPIRITO SANTO</td>\n",
              "      <td>Vitória</td>\n",
              "      <td>320156</td>\n",
              "      <td>1.978263e+07</td>\n",
              "      <td>61790.589844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>MINAS GERAIS</td>\n",
              "      <td>Jacutinga</td>\n",
              "      <td>21424</td>\n",
              "      <td>2.478160e+05</td>\n",
              "      <td>11567.209961</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PIAUÍ</td>\n",
              "      <td>Nazária</td>\n",
              "      <td>7895</td>\n",
              "      <td>2.095138e+04</td>\n",
              "      <td>2653.750000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03afb063-4997-4c26-b330-33421fd475f2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-03afb063-4997-4c26-b330-33421fd475f2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-03afb063-4997-4c26-b330-33421fd475f2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cidades_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MFj8iai5nsV_",
        "outputId": "8d1cffaf-e897-471d-a135-07ab24fced11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 5555 entries, 0 to 5565\n",
            "Data columns (total 5 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   estado         5555 non-null   object \n",
            " 1   cidade         5555 non-null   object \n",
            " 2   populacao      5555 non-null   int64  \n",
            " 3   pib            5555 non-null   float64\n",
            " 4   pib_percapita  5555 non-null   float64\n",
            "dtypes: float64(2), int64(1), object(2)\n",
            "memory usage: 260.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#remoçao de acentuação para facilitar a combinação de dataframes\n",
        "cols = cidades_df.select_dtypes(include=[object]).columns\n",
        "cidades_df[cols] = cidades_df[cols].apply(lambda x: x.str.normalize('NFKD').str.encode('ascii', errors='ignore').str.decode('utf-8'))"
      ],
      "metadata": {
        "id": "dW727TN5rnm0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GcAWBfwhYq96"
      },
      "source": [
        "# escrever o conteudo extraido no arquivo cidades-limpo.csv separados por ;\n",
        "\n",
        "NOME_ARQUIVO_DESTINO = 'cidades-limpo.csv'\n",
        "\n",
        "cidades_df.to_csv(NOME_ARQUIVO_DESTINO, sep=\";\", index=False)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EBzoHVD8b_c7"
      },
      "source": [
        "### **1.3. Brasil** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ft6l5bDwb_c7"
      },
      "source": [
        "Utilize o pacote Python `pandas` para combinar os dados do arquivo `estados-bruto.csv` com os dados do arquivo `cidades-bruto.csv` em um único dataframe. Escolha a coluna e o método de combinação de tal forma que **não haja perda de dados** no processo (não produzirá valores nulos `NaN`). Salve os dados do dataframe no arquivo `brasil.csv`"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vz3J7G4-dBXa"
      },
      "source": [
        "# solução do exercício 1.3\n",
        "brasil_df = pd.merge(left=cidades_df, right=estados_df, on='estado', how='inner')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "brasil_df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RORWXyDZLlCj",
        "outputId": "f2887103-644b-4966-994a-375b82d981b1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 5555 entries, 0 to 5554\n",
            "Data columns (total 7 columns):\n",
            " #   Column         Non-Null Count  Dtype  \n",
            "---  ------         --------------  -----  \n",
            " 0   estado         5555 non-null   object \n",
            " 1   cidade         5555 non-null   object \n",
            " 2   populacao      5555 non-null   int64  \n",
            " 3   pib            5555 non-null   float64\n",
            " 4   pib_percapita  5555 non-null   float64\n",
            " 5   sigla          5555 non-null   object \n",
            " 6   regiao         5555 non-null   object \n",
            "dtypes: float64(2), int64(1), object(4)\n",
            "memory usage: 347.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "NOME_ARQUIVO_DESTINO = 'brasil.csv'\n",
        "\n",
        "brasil_df.to_csv(NOME_ARQUIVO_DESTINO, sep=\";\", index=False)"
      ],
      "metadata": {
        "id": "1-V3moIFLrPo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "waxn4B2UDHyl"
      },
      "source": [
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "finLQoyyGVmk"
      },
      "source": [
        "## 2\\. Data Analytics"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ab0GW19Ed1ig"
      },
      "source": [
        "### **2.1. DataFrame** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l8jJYjeBdijt"
      },
      "source": [
        "Utilize o pacote Python `pandas` para carregar o arquivo `brasil.csv` no dataframe `brasil_df`."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8kFQLlqud4QL"
      },
      "source": [
        "# solução do exercício 2.1\n",
        "brasil_df = pd.read_csv('brasil.csv', sep=';')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "brasil_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 540
        },
        "id": "xj_aqXi-mn0Y",
        "outputId": "00a843c7-3457-42a8-99be-f14307ef555d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                estado                 cidade  populacao           pib  \\\n",
              "0                BAHIA               Tremedal      18433  5.788399e+04   \n",
              "1                BAHIA               Maetinga       7884  2.355845e+04   \n",
              "2                BAHIA               Ibirapua       7893  7.499741e+04   \n",
              "3                BAHIA  Governador Mangabeira      20668  9.290382e+04   \n",
              "4                BAHIA                Ibitita      19410  6.236689e+04   \n",
              "...                ...                    ...        ...           ...   \n",
              "5550             AMAPA         Serra do Navio       3982  1.097953e+05   \n",
              "5551             AMAPA         Ferreira Gomes       5475  6.993773e+04   \n",
              "5552             AMAPA        Tartarugalzinho      13769  1.199880e+05   \n",
              "5553             AMAPA                 Macapa     366484  4.679694e+06   \n",
              "5554  DISTRITO FEDERAL               Brasilia    2606885  1.314873e+08   \n",
              "\n",
              "      pib_percapita sigla        regiao  \n",
              "0       3140.239990    BA      NORDESTE  \n",
              "1       2988.129883    BA      NORDESTE  \n",
              "2       9501.759766    BA      NORDESTE  \n",
              "3       4495.060059    BA      NORDESTE  \n",
              "4       3213.129883    BA      NORDESTE  \n",
              "...             ...   ...           ...  \n",
              "5550   27572.900391    AP         NORTE  \n",
              "5551   12774.009766    AP         NORTE  \n",
              "5552    8714.360352    AP         NORTE  \n",
              "5553   12769.160156    AP         NORTE  \n",
              "5554   50438.460938    DF  CENTRO-OESTE  \n",
              "\n",
              "[5555 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff4bf529-08f8-4c3e-b33e-0fffd563d845\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>estado</th>\n",
              "      <th>cidade</th>\n",
              "      <th>populacao</th>\n",
              "      <th>pib</th>\n",
              "      <th>pib_percapita</th>\n",
              "      <th>sigla</th>\n",
              "      <th>regiao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Tremedal</td>\n",
              "      <td>18433</td>\n",
              "      <td>5.788399e+04</td>\n",
              "      <td>3140.239990</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Maetinga</td>\n",
              "      <td>7884</td>\n",
              "      <td>2.355845e+04</td>\n",
              "      <td>2988.129883</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Ibirapua</td>\n",
              "      <td>7893</td>\n",
              "      <td>7.499741e+04</td>\n",
              "      <td>9501.759766</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Governador Mangabeira</td>\n",
              "      <td>20668</td>\n",
              "      <td>9.290382e+04</td>\n",
              "      <td>4495.060059</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Ibitita</td>\n",
              "      <td>19410</td>\n",
              "      <td>6.236689e+04</td>\n",
              "      <td>3213.129883</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5550</th>\n",
              "      <td>AMAPA</td>\n",
              "      <td>Serra do Navio</td>\n",
              "      <td>3982</td>\n",
              "      <td>1.097953e+05</td>\n",
              "      <td>27572.900391</td>\n",
              "      <td>AP</td>\n",
              "      <td>NORTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5551</th>\n",
              "      <td>AMAPA</td>\n",
              "      <td>Ferreira Gomes</td>\n",
              "      <td>5475</td>\n",
              "      <td>6.993773e+04</td>\n",
              "      <td>12774.009766</td>\n",
              "      <td>AP</td>\n",
              "      <td>NORTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5552</th>\n",
              "      <td>AMAPA</td>\n",
              "      <td>Tartarugalzinho</td>\n",
              "      <td>13769</td>\n",
              "      <td>1.199880e+05</td>\n",
              "      <td>8714.360352</td>\n",
              "      <td>AP</td>\n",
              "      <td>NORTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5553</th>\n",
              "      <td>AMAPA</td>\n",
              "      <td>Macapa</td>\n",
              "      <td>366484</td>\n",
              "      <td>4.679694e+06</td>\n",
              "      <td>12769.160156</td>\n",
              "      <td>AP</td>\n",
              "      <td>NORTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5554</th>\n",
              "      <td>DISTRITO FEDERAL</td>\n",
              "      <td>Brasilia</td>\n",
              "      <td>2606885</td>\n",
              "      <td>1.314873e+08</td>\n",
              "      <td>50438.460938</td>\n",
              "      <td>DF</td>\n",
              "      <td>CENTRO-OESTE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5555 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff4bf529-08f8-4c3e-b33e-0fffd563d845')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ff4bf529-08f8-4c3e-b33e-0fffd563d845 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ff4bf529-08f8-4c3e-b33e-0fffd563d845');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZFWvK8FXHuex"
      },
      "source": [
        "### **2.2. Analise** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EGyz0R1dd62D"
      },
      "source": [
        "Utilize o dataframe `brasil_df` para responder as seguintes perguntas de negócio:"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lGnYVp7IeFBD"
      },
      "source": [
        " - Quais são as 10 cidades mais populosas do Brasil?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KQKcD-VkeQYf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "outputId": "c30fe8f3-7ea7-4d40-a8b8-0a2813622e01"
      },
      "source": [
        "\n",
        "maiores_populacoes = brasil_df.sort_values(by=['populacao'], ascending=False,)\n",
        "maiores_populacoes[0:9]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                estado          cidade  populacao          pib  pib_percapita  \\\n",
              "3271         SAO PAULO       Sao Paulo   11037593  389317152.0   35271.929688   \n",
              "4504    RIO DE JANEIRO  Rio de Janeiro    6186710  175739344.0   28405.949219   \n",
              "44               BAHIA        Salvador    2998056   32824228.0   10948.500000   \n",
              "5554  DISTRITO FEDERAL        Brasilia    2606885  131487264.0   50438.460938   \n",
              "4221             CEARA       Fortaleza    2505552   31789186.0   12687.500000   \n",
              "1735      MINAS GERAIS  Belo Horizonte    2452617   44595204.0   18182.699219   \n",
              "4849            PARANA        Curitiba    1851215   45762420.0   24720.210938   \n",
              "3720          AMAZONAS          Manaus    1738641   40486108.0   23286.060547   \n",
              "2435        PERNAMBUCO          Recife    1561659   24835340.0   15903.179688   \n",
              "\n",
              "     sigla        regiao  \n",
              "3271    SP       SUDESTE  \n",
              "4504    RJ       SUDESTE  \n",
              "44      BA      NORDESTE  \n",
              "5554    DF  CENTRO-OESTE  \n",
              "4221    CE      NORDESTE  \n",
              "1735    MG       SUDESTE  \n",
              "4849    PR           SUL  \n",
              "3720    AM         NORTE  \n",
              "2435    PE      NORDESTE  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fef3f643-20ba-426f-8852-056a2cf267d1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>estado</th>\n",
              "      <th>cidade</th>\n",
              "      <th>populacao</th>\n",
              "      <th>pib</th>\n",
              "      <th>pib_percapita</th>\n",
              "      <th>sigla</th>\n",
              "      <th>regiao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3271</th>\n",
              "      <td>SAO PAULO</td>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>11037593</td>\n",
              "      <td>389317152.0</td>\n",
              "      <td>35271.929688</td>\n",
              "      <td>SP</td>\n",
              "      <td>SUDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4504</th>\n",
              "      <td>RIO DE JANEIRO</td>\n",
              "      <td>Rio de Janeiro</td>\n",
              "      <td>6186710</td>\n",
              "      <td>175739344.0</td>\n",
              "      <td>28405.949219</td>\n",
              "      <td>RJ</td>\n",
              "      <td>SUDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>BAHIA</td>\n",
              "      <td>Salvador</td>\n",
              "      <td>2998056</td>\n",
              "      <td>32824228.0</td>\n",
              "      <td>10948.500000</td>\n",
              "      <td>BA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5554</th>\n",
              "      <td>DISTRITO FEDERAL</td>\n",
              "      <td>Brasilia</td>\n",
              "      <td>2606885</td>\n",
              "      <td>131487264.0</td>\n",
              "      <td>50438.460938</td>\n",
              "      <td>DF</td>\n",
              "      <td>CENTRO-OESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4221</th>\n",
              "      <td>CEARA</td>\n",
              "      <td>Fortaleza</td>\n",
              "      <td>2505552</td>\n",
              "      <td>31789186.0</td>\n",
              "      <td>12687.500000</td>\n",
              "      <td>CE</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1735</th>\n",
              "      <td>MINAS GERAIS</td>\n",
              "      <td>Belo Horizonte</td>\n",
              "      <td>2452617</td>\n",
              "      <td>44595204.0</td>\n",
              "      <td>18182.699219</td>\n",
              "      <td>MG</td>\n",
              "      <td>SUDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4849</th>\n",
              "      <td>PARANA</td>\n",
              "      <td>Curitiba</td>\n",
              "      <td>1851215</td>\n",
              "      <td>45762420.0</td>\n",
              "      <td>24720.210938</td>\n",
              "      <td>PR</td>\n",
              "      <td>SUL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3720</th>\n",
              "      <td>AMAZONAS</td>\n",
              "      <td>Manaus</td>\n",
              "      <td>1738641</td>\n",
              "      <td>40486108.0</td>\n",
              "      <td>23286.060547</td>\n",
              "      <td>AM</td>\n",
              "      <td>NORTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2435</th>\n",
              "      <td>PERNAMBUCO</td>\n",
              "      <td>Recife</td>\n",
              "      <td>1561659</td>\n",
              "      <td>24835340.0</td>\n",
              "      <td>15903.179688</td>\n",
              "      <td>PE</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fef3f643-20ba-426f-8852-056a2cf267d1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fef3f643-20ba-426f-8852-056a2cf267d1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fef3f643-20ba-426f-8852-056a2cf267d1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l93St6uleWTp"
      },
      "source": [
        " - Quais são as 5 cidades com a menor PIB per capita da região nordeste?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DS5akh2zeWTq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        },
        "outputId": "302be0f3-8e3e-426c-b6c4-752ad52d9461"
      },
      "source": [
        "\n",
        "menores_pib_nordeste = brasil_df.query(\"regiao == 'NORDESTE'\").sort_values(by=['pib_percapita'], ascending=True)\n",
        "menores_pib_nordeste.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        estado              cidade  populacao           pib  pib_percapita  \\\n",
              "4464  MARANHAO  Sao Vicente Ferrer      20463  39492.960938    1929.969971   \n",
              "4359  MARANHAO             Cajapio      10337  22781.035156    2203.830078   \n",
              "1848     PIAUI       Dom Inocencio      10795  25457.230469    2358.239990   \n",
              "4483  MARANHAO            Timbiras      26909  63724.851562    2368.159912   \n",
              "4380  MARANHAO               Axixa      15203  36745.226562    2416.969971   \n",
              "\n",
              "     sigla    regiao  \n",
              "4464    MA  NORDESTE  \n",
              "4359    MA  NORDESTE  \n",
              "1848    PI  NORDESTE  \n",
              "4483    MA  NORDESTE  \n",
              "4380    MA  NORDESTE  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f6f2f3a-4016-48e7-b599-61041977efdf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>estado</th>\n",
              "      <th>cidade</th>\n",
              "      <th>populacao</th>\n",
              "      <th>pib</th>\n",
              "      <th>pib_percapita</th>\n",
              "      <th>sigla</th>\n",
              "      <th>regiao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4464</th>\n",
              "      <td>MARANHAO</td>\n",
              "      <td>Sao Vicente Ferrer</td>\n",
              "      <td>20463</td>\n",
              "      <td>39492.960938</td>\n",
              "      <td>1929.969971</td>\n",
              "      <td>MA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4359</th>\n",
              "      <td>MARANHAO</td>\n",
              "      <td>Cajapio</td>\n",
              "      <td>10337</td>\n",
              "      <td>22781.035156</td>\n",
              "      <td>2203.830078</td>\n",
              "      <td>MA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1848</th>\n",
              "      <td>PIAUI</td>\n",
              "      <td>Dom Inocencio</td>\n",
              "      <td>10795</td>\n",
              "      <td>25457.230469</td>\n",
              "      <td>2358.239990</td>\n",
              "      <td>PI</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4483</th>\n",
              "      <td>MARANHAO</td>\n",
              "      <td>Timbiras</td>\n",
              "      <td>26909</td>\n",
              "      <td>63724.851562</td>\n",
              "      <td>2368.159912</td>\n",
              "      <td>MA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4380</th>\n",
              "      <td>MARANHAO</td>\n",
              "      <td>Axixa</td>\n",
              "      <td>15203</td>\n",
              "      <td>36745.226562</td>\n",
              "      <td>2416.969971</td>\n",
              "      <td>MA</td>\n",
              "      <td>NORDESTE</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f6f2f3a-4016-48e7-b599-61041977efdf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7f6f2f3a-4016-48e7-b599-61041977efdf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7f6f2f3a-4016-48e7-b599-61041977efdf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GqwffgUmedmb"
      },
      "source": [
        " - Quais são as 15 cidades com maior PIB do do estado de São Paulo?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tFKEn1gLedmc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 520
        },
        "outputId": "6702a87c-9f71-4b86-9217-e5a012caf004"
      },
      "source": [
        "maiores_pib_sp = brasil_df.query(\"sigla == 'SP'\").sort_values(by=['pib'], ascending=False)\n",
        "maiores_pib_sp[['cidade', 'pib']].head(15)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                     cidade          pib\n",
              "3271              Sao Paulo  389317152.0\n",
              "3223              Guarulhos   32473828.0\n",
              "3340               Campinas   31654720.0\n",
              "3106                 Osasco   31616452.0\n",
              "2810  Sao Bernardo do Campo   28935768.0\n",
              "3344                Barueri   26908070.0\n",
              "2768                 Santos   22546134.0\n",
              "2994    Sao Jose dos Campos   22018042.0\n",
              "3014                Jundiai   16585137.0\n",
              "2816            Santo Andre   14709603.0\n",
              "2754         Ribeirao Preto   14688064.0\n",
              "3152               Sorocaba   14182597.0\n",
              "3038                Diadema    9969819.0\n",
              "3334             Piracicaba    9601211.0\n",
              "2999     Sao Caetano do Sul    8920202.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-44c73b37-7e90-442b-ade0-7b8722e7c933\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cidade</th>\n",
              "      <th>pib</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3271</th>\n",
              "      <td>Sao Paulo</td>\n",
              "      <td>389317152.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3223</th>\n",
              "      <td>Guarulhos</td>\n",
              "      <td>32473828.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3340</th>\n",
              "      <td>Campinas</td>\n",
              "      <td>31654720.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3106</th>\n",
              "      <td>Osasco</td>\n",
              "      <td>31616452.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2810</th>\n",
              "      <td>Sao Bernardo do Campo</td>\n",
              "      <td>28935768.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3344</th>\n",
              "      <td>Barueri</td>\n",
              "      <td>26908070.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2768</th>\n",
              "      <td>Santos</td>\n",
              "      <td>22546134.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2994</th>\n",
              "      <td>Sao Jose dos Campos</td>\n",
              "      <td>22018042.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3014</th>\n",
              "      <td>Jundiai</td>\n",
              "      <td>16585137.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2816</th>\n",
              "      <td>Santo Andre</td>\n",
              "      <td>14709603.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2754</th>\n",
              "      <td>Ribeirao Preto</td>\n",
              "      <td>14688064.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3152</th>\n",
              "      <td>Sorocaba</td>\n",
              "      <td>14182597.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3038</th>\n",
              "      <td>Diadema</td>\n",
              "      <td>9969819.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3334</th>\n",
              "      <td>Piracicaba</td>\n",
              "      <td>9601211.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2999</th>\n",
              "      <td>Sao Caetano do Sul</td>\n",
              "      <td>8920202.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44c73b37-7e90-442b-ade0-7b8722e7c933')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-44c73b37-7e90-442b-ade0-7b8722e7c933 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-44c73b37-7e90-442b-ade0-7b8722e7c933');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Wg_la1wOewoB"
      },
      "source": [
        " - Qual é o PIB do estado de Santa Catarina?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LwGqow5_ewoB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "189141dd-e566-4860-bbf4-721e6152d8de"
      },
      "source": [
        "brasil_df.query(\"sigla == 'SC'\")['pib'].agg(\"sum\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "129806256.75195317"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Yaw2gDukfApr"
      },
      "source": [
        " - Qual é o população da região sul?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "enEkNjFQfAps",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "12241734-a809-403f-9995-476b2fc27c8f"
      },
      "source": [
        "populacao_sul = brasil_df.query(\"regiao == 'SUL'\")[\"populacao\"].agg(\"sum\")\n",
        "populacao_sul"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "27719118"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9qOaKRS9fFu8"
      },
      "source": [
        " - Qual é o PIB per capito médio das cidades do Mato Grosso do Sul?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gX8DVSfFfFu9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0bdc7a45-d2f2-4c0b-b8d0-73b088495ab8"
      },
      "source": [
        "media_pib_percapita_MS = brasil_df.query(\"sigla == 'MS'\")[\"pib_percapita\"].agg(\"mean\")\n",
        "media_pib_percapita_MS"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "14458.896859975644"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lvf-VqaffS2D"
      },
      "source": [
        " - Qual é a população do Brasil?"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_nBsY6EcfS2E",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0767776d-569b-4b9a-c46a-52ecf69e1f86"
      },
      "source": [
        "pop_brasil = brasil_df['populacao'].agg(\"sum\")\n",
        "pop_brasil"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "191176146"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hnTSARXpipkP"
      },
      "source": [
        "### **2.3. Visualização** "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7coMkY8xixFO"
      },
      "source": [
        "Utilize o dataframe `brasil_df` para gerar as seguintes visualizações."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SgvPvh4Vjctx"
      },
      "source": [
        " - Gere um gráfico de barras com as 10 cidades menos populosas do Brasil."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V8eM0uEUjcty"
      },
      "source": [
        "cidades_menos_populosas = brasil_df[['cidade', 'estado', 'populacao']].sort_values(by=['populacao'], ascending=True).head(10)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cidades_menos_populosas"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "RnM5zXeYwtgI",
        "outputId": "5f1e2f2d-dcbc-4fbc-a322-e1e4e44f2baa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  cidade        estado  populacao\n",
              "3224                Bora     SAO PAULO        837\n",
              "1485    Serra da Saudade  MINAS GERAIS        890\n",
              "2283          Anhanguera         GOIAS       1018\n",
              "4673          Araguainha   MATO GROSSO       1115\n",
              "3247       Nova Castilho     SAO PAULO       1122\n",
              "3580  Oliveira de Fatima     TOCANTINS       1129\n",
              "1939         Miguel Leao         PIAUI       1212\n",
              "995      Cedro do Abaete  MINAS GERAIS       1221\n",
              "3531              Parari       PARAIBA       1266\n",
              "3614    Chapada de Areia     TOCANTINS       1273"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-363a8e31-908a-419c-a3c9-07c8054ea501\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cidade</th>\n",
              "      <th>estado</th>\n",
              "      <th>populacao</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3224</th>\n",
              "      <td>Bora</td>\n",
              "      <td>SAO PAULO</td>\n",
              "      <td>837</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1485</th>\n",
              "      <td>Serra da Saudade</td>\n",
              "      <td>MINAS GERAIS</td>\n",
              "      <td>890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2283</th>\n",
              "      <td>Anhanguera</td>\n",
              "      <td>GOIAS</td>\n",
              "      <td>1018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4673</th>\n",
              "      <td>Araguainha</td>\n",
              "      <td>MATO GROSSO</td>\n",
              "      <td>1115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3247</th>\n",
              "      <td>Nova Castilho</td>\n",
              "      <td>SAO PAULO</td>\n",
              "      <td>1122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3580</th>\n",
              "      <td>Oliveira de Fatima</td>\n",
              "      <td>TOCANTINS</td>\n",
              "      <td>1129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1939</th>\n",
              "      <td>Miguel Leao</td>\n",
              "      <td>PIAUI</td>\n",
              "      <td>1212</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>995</th>\n",
              "      <td>Cedro do Abaete</td>\n",
              "      <td>MINAS GERAIS</td>\n",
              "      <td>1221</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3531</th>\n",
              "      <td>Parari</td>\n",
              "      <td>PARAIBA</td>\n",
              "      <td>1266</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3614</th>\n",
              "      <td>Chapada de Areia</td>\n",
              "      <td>TOCANTINS</td>\n",
              "      <td>1273</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-363a8e31-908a-419c-a3c9-07c8054ea501')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-363a8e31-908a-419c-a3c9-07c8054ea501 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-363a8e31-908a-419c-a3c9-07c8054ea501');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cidades_menos_populosas.plot.bar(x=\"cidade\",\n",
        "                                 y=\"populacao\",\n",
        "                                 figsize=(12,6),\n",
        "                                 ylabel=\"Populacao\",\n",
        "                                 xlabel=\"Cidade\",\n",
        "                                 title=\"10 cidades menos populosas do Brasil de acordo com Censo 2010\",\n",
        "                                 legend=True,\n",
        "                                 color=\"#ee7a7a\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 463
        },
        "id": "CD7i9wmixBhH",
        "outputId": "9495c137-eb91-42da-bac0-bb18d791ec0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f563df1ed50>"
            ]
          },
          "metadata": {},
          "execution_count": 53
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gsa3SrTjjrGV"
      },
      "source": [
        " - Gere um gráfico de pizza com a proporção da população do Brasil por região."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1dvqIAEHjrGV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 553
        },
        "outputId": "6861e17b-f4a9-4956-9f46-a09182ad6579"
      },
      "source": [
        "populacao_por_regiao = brasil_df[[\"regiao\", \"populacao\"]].groupby(\"regiao\").agg(\"sum\")\n",
        "populacao_por_regiao.plot.pie(y='populacao',\n",
        "                              title=\"Proportçao da População do Brasil por Região\",\n",
        "                              figsize=(16,9),\n",
        "                              autopct='%1.1f%%'\n",
        "                              )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f563de86110>"
            ]
          },
          "metadata": {},
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "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22po9l/prxpjOlY1bz1u82qswbAvVDmzOoZ9unEPY8xYp7NURURmAMnGmGuczqJUbWkLjGqy7K6D7cBQp7M0B/bx3EwV1yBRTY9Y14g5xe5yHYjV3fiO07mUqosmd4VKpYJswOpCOtfpIM3ES1incU9wOoiqd3FY3UbtsbocZ2F1dynVZGkXklJKKaWaHO1CUkoppVSTowWMUkoppZocLWCUUkop1eRoAaOUUkqpJkcLGKWUUko1OVrAKKWUUqrJ0QJGKaWUUk1Og13I7ptvvmnndrufx7q5nhZOTU8AWF1SUnJ9//79dzodRimlVMvWYAWM2+1+Pjk5OT0xMXGfy+XSq+c1MYFAQHbt2tU7Ly/veay73yqllFKOaciWkL6JiYkHtHhpmlwul0lMTMzHakFTSimlHNWQBYxLi5emzX7/tPtPKaWU41rczRw3b97svvnmmztnZWW1at26dWnbtm39TzzxxJaBAwf2SU1NLSybb+LEiTsmTpy4p0OHDt6+ffsWLFiwYAPASy+91GbevHmeoUOHHnz66aeTADZs2BDVtWvXQpfLxTnnnJOflpZWOHXq1I5JSUn+oqIiGT9+/K6pU6ceHTcyc+bMtk8++WQSQGxsbGDmzJlbLrjggkMV5Q0EAtx9990pb7zxRoKIkJSUVPzkk09uPu200woBOnTo4I2JiSl1uay6YvDgwQdffvnlLR9//HHMHXfc0am4uNhVXFwsl1566b4uXboUVSdz2bZfe+21H/v3719YUS6llFLKSY4VMKl3v9+/PteXM33EN1XNEwgEuOSSS3r8+te/3jNv3rwfAb7++uvo7du3h3fq1Klo7dq1aypabvXq1a2++eabqOAv89tuu23PbbfdtgesIuLzzz//PiUlpQTg8ccfTxg1atS+2bNnb87LywtLT0/vO2bMmH09evTwv/76656XXnopcdGiRetSUlJKFi5c2Gr06NHdlyxZkt25c+eS8tuePn164pIlS2JWr169Ji4uLvD222+3/sUvftFj3bp137Vq1coABG+7zHXXXdf19ddf33D66acfKSkpISsrK6p///6F1clc3WOulFJKOaVFdQfMmzcvzu12m9///ve7yl47/fTTj3Tt2rX4RMvdfPPNO+6///6U2mwzOTm5tHPnzkVbtmwJB5g5c2bytGnTtpYVDkOGDCm48sor98yaNatd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vwCQqDgOEQDsAzAfwHzNo+9XHYbI6lhgKKrpDq03AvvIXA+gZzt3JwqHNQAeAfA/zaO3qA5DFC1YYCgm6A4tGcAvAdyMw49lIAoHA8A7AB7RPPpS1WGIohELDMWU1nUysxGYXnIqjkPR5yCAZwE8yYW5ROHFAkMxS3doYxAoMpcCSFAch6zNA+AxAP/VPHq96jBEsYAFhmJe6zqZSxFY8JujOA5Zhw+BE+cfB/Cp5tH5zZQoglhgiNrQHdoQBPaU+QUATXEcMh8/gDwA/wOwUPPoxzuElYjCiAWG6Bhap5h+gcDozEmK45A6EsAyBErLm5pHL1Och4jAAkPUrtaFv9MQGJn5OYBMtYkoQlYgUFre0Dz6HtVhiOhwLDBEHaA7tDgAP0JgZOZ8AF3UJqIQW4NAaXld8+hFirMQ0XGwwBB1UuveMnMAnIPAJdn91SaiTtqIQGn5n+bRt6kOQ0TBYYEhChHdoZ2CQJE5A8Dp4M6/ZrUDwNff3Tg9RGRNLDBEYdC6bmYUAmXGCWAmgK5KQ8UuFhaiKMQCQxQBrWtnJuL7EZqpAJKUhopeLCxEMYAFhkgB3aElIlBiTgMwFsBIAIMACIWxrEgiUFgW4/vCsltpIiKKCBYYIpPQHVoqgBEIlJmRCExBjQTQR2UukzAA7ASw+Qc3j+bRG1QGIyI1WGCITE53aD1wZKkZASBdZa4w8QLYjiOLyhbNozerDEZE5sICQ2RRukPrB2A4gGwAvQD0bvPrd7/PBGBXlfEHWgBUtN7K2/y+FIHDEDcD2K55dK+yhERkGSwwRFGs9WqoHji83Pzw1xQAcQDi29zafiwQOAPIOMavjTh6MTns95pHrw33+yWi2MECQ0RERJZjUx2AiIiIqKNYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHJYYIiIiMhyWGCIiIjIclhgiIiIyHL+P3QFwkK1GJptAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}