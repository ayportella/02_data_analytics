{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ayportella/data_analytics/blob/main/14_data_visualization_i\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KJqp9AANOCtf"
      },
      "source": [
        "<img src=\"https://raw.githubusercontent.com/andre-marcos-perez/ebac-course-utils/main/media/logo/newebac_logo_black_half.png\" alt=\"ebac-logo\">\n",
        "\n",
        "---\n",
        "\n",
        "# **Módulo** | Análise de Dados: Visualização de Dados I\n",
        "Caderno de **Exercícios**<br> \n",
        "Professor [André Perez](https://www.linkedin.com/in/andremarcosperez/)\n",
        "\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d9jDtUbDOE1-"
      },
      "source": [
        "# **Tópicos**\n",
        "\n",
        "<ol type=\"1\">\n",
        "  <li>Pacote Seaborn;</li>\n",
        "  <li>Categorias: Gráficos de Barras e de Setores;</li>\n",
        "  <li>Tendências: Gráficos de Linha e de Área.</li>\n",
        "</ol>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SmoHgt-lwkpD"
      },
      "source": [
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GABI6OW8OfQ2"
      },
      "source": [
        "# **Exercícios**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "45DbYPgFhuR7"
      },
      "source": [
        "Nestes exercícios, você deve decidir qual é o gráfico visto em aula que melhor visualiza uma base de dados. Após decidir, você deverá criar a visualização usando o conteúdo exposto durante a aula e adicionar um pequeno parágrafo sobre um insights que pode ser extraido do gráfico."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GWgNoJN8DHyY"
      },
      "source": [
        "## 1\\. Preço do diamante por tipo de corte"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7w8cSL1sdVdC",
        "outputId": "401d2d11-2c76-4a42-ce1a-732c1f0d5cb2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "source": [
        "import seaborn as sns\n",
        "\n",
        "data = sns.load_dataset(\"diamonds\")\n",
        "data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   carat      cut color clarity  depth  table  price     x     y     z\n",
              "0   0.23    Ideal     E     SI2   61.5   55.0    326  3.95  3.98  2.43\n",
              "1   0.21  Premium     E     SI1   59.8   61.0    326  3.89  3.84  2.31\n",
              "2   0.23     Good     E     VS1   56.9   65.0    327  4.05  4.07  2.31\n",
              "3   0.29  Premium     I     VS2   62.4   58.0    334  4.20  4.23  2.63\n",
              "4   0.31     Good     J     SI2   63.3   58.0    335  4.34  4.35  2.75"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3bb8e477-a06a-4fd5-b853-e74acc248137\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>carat</th>\n",
              "      <th>cut</th>\n",
              "      <th>color</th>\n",
              "      <th>clarity</th>\n",
              "      <th>depth</th>\n",
              "      <th>table</th>\n",
              "      <th>price</th>\n",
              "      <th>x</th>\n",
              "      <th>y</th>\n",
              "      <th>z</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.23</td>\n",
              "      <td>Ideal</td>\n",
              "      <td>E</td>\n",
              "      <td>SI2</td>\n",
              "      <td>61.5</td>\n",
              "      <td>55.0</td>\n",
              "      <td>326</td>\n",
              "      <td>3.95</td>\n",
              "      <td>3.98</td>\n",
              "      <td>2.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.21</td>\n",
              "      <td>Premium</td>\n",
              "      <td>E</td>\n",
              "      <td>SI1</td>\n",
              "      <td>59.8</td>\n",
              "      <td>61.0</td>\n",
              "      <td>326</td>\n",
              "      <td>3.89</td>\n",
              "      <td>3.84</td>\n",
              "      <td>2.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.23</td>\n",
              "      <td>Good</td>\n",
              "      <td>E</td>\n",
              "      <td>VS1</td>\n",
              "      <td>56.9</td>\n",
              "      <td>65.0</td>\n",
              "      <td>327</td>\n",
              "      <td>4.05</td>\n",
              "      <td>4.07</td>\n",
              "      <td>2.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.29</td>\n",
              "      <td>Premium</td>\n",
              "      <td>I</td>\n",
              "      <td>VS2</td>\n",
              "      <td>62.4</td>\n",
              "      <td>58.0</td>\n",
              "      <td>334</td>\n",
              "      <td>4.20</td>\n",
              "      <td>4.23</td>\n",
              "      <td>2.63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.31</td>\n",
              "      <td>Good</td>\n",
              "      <td>J</td>\n",
              "      <td>SI2</td>\n",
              "      <td>63.3</td>\n",
              "      <td>58.0</td>\n",
              "      <td>335</td>\n",
              "      <td>4.34</td>\n",
              "      <td>4.35</td>\n",
              "      <td>2.75</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bb8e477-a06a-4fd5-b853-e74acc248137')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3bb8e477-a06a-4fd5-b853-e74acc248137 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3bb8e477-a06a-4fd5-b853-e74acc248137');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FzomRhmMc_QN",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "outputId": "656b183d-0dbb-41f8-cd21-2bd1fa383633"
      },
      "source": [
        "# gráfico do exercício 1\n",
        "\n",
        "diamonds = sns.barplot(data=data, x=\"cut\", y=\"price\", palette=\"colorblind\")\n",
        "diamonds.set_title(\"Preço Médio do Diamante de Acordo com o Corte\", fontsize=14, fontweight=\"bold\")\n",
        "diamonds.set(xlabel=\"Tipo de corte\", ylabel=\"Média de preço (USD)\")\n",
        "diamonds.figure.set_size_inches(10,6)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "T1v54HT4lEfs"
      },
      "source": [
        "**Insight do gráfico 1**: \n",
        "\n",
        "O corte é um dos 4 parâmetros que definem a qualidade de um diamante, juntamente com a cor, o quilate e a claridade das gemas.\n",
        "\n",
        "A gradação do melhor para o pior é: ideal, premium, very good, goos, fair e poor.\n",
        "\n",
        "De acordo com o gráfico, vemos que os cortes premium e fair atingem os maiores valores de média de preços, o que implica dizer que os melhores cortes de acordo com o Instituto Gemológico da América(GIA) não são determinantes para os maiores valores de preços no conjunto de dados amostrados.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QPUo5mDTdtRY"
      },
      "source": [
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wWfZ8iu9dwzz"
      },
      "source": [
        "## 2\\. Número de passageiros em dezembro por ano"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rf3l0_fpdwz0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "909eeb59-62a3-4d9c-8624-a1bf9d09a36a"
      },
      "source": [
        "import seaborn as sns\n",
        "\n",
        "data = sns.load_dataset(\"flights\")\n",
        "data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   year month  passengers\n",
              "0  1949   Jan         112\n",
              "1  1949   Feb         118\n",
              "2  1949   Mar         132\n",
              "3  1949   Apr         129\n",
              "4  1949   May         121"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6a1b3f7e-e7cc-48ce-a6a1-4f40d6d35772\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949</td>\n",
              "      <td>Jan</td>\n",
              "      <td>112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949</td>\n",
              "      <td>Feb</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949</td>\n",
              "      <td>Mar</td>\n",
              "      <td>132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949</td>\n",
              "      <td>Apr</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949</td>\n",
              "      <td>May</td>\n",
              "      <td>121</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a1b3f7e-e7cc-48ce-a6a1-4f40d6d35772')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6a1b3f7e-e7cc-48ce-a6a1-4f40d6d35772 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6a1b3f7e-e7cc-48ce-a6a1-4f40d6d35772');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GS8LOuQjdwz1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "outputId": "40a4eb9c-9ad8-438d-c025-55060b1f1f08"
      },
      "source": [
        "# gráfico do exercício 2\n",
        "\n",
        "flights = data.query(\"month == 'Dec'\")\n",
        "flights"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     year month  passengers\n",
              "11   1949   Dec         118\n",
              "23   1950   Dec         140\n",
              "35   1951   Dec         166\n",
              "47   1952   Dec         194\n",
              "59   1953   Dec         201\n",
              "71   1954   Dec         229\n",
              "83   1955   Dec         278\n",
              "95   1956   Dec         306\n",
              "107  1957   Dec         336\n",
              "119  1958   Dec         337\n",
              "131  1959   Dec         405\n",
              "143  1960   Dec         432"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a2ad77f-9e95-496d-b59c-9c407cb1024c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1949</td>\n",
              "      <td>Dec</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1950</td>\n",
              "      <td>Dec</td>\n",
              "      <td>140</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1951</td>\n",
              "      <td>Dec</td>\n",
              "      <td>166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>1952</td>\n",
              "      <td>Dec</td>\n",
              "      <td>194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>1953</td>\n",
              "      <td>Dec</td>\n",
              "      <td>201</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>1954</td>\n",
              "      <td>Dec</td>\n",
              "      <td>229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>1955</td>\n",
              "      <td>Dec</td>\n",
              "      <td>278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>1956</td>\n",
              "      <td>Dec</td>\n",
              "      <td>306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>1957</td>\n",
              "      <td>Dec</td>\n",
              "      <td>336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>1958</td>\n",
              "      <td>Dec</td>\n",
              "      <td>337</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>1959</td>\n",
              "      <td>Dec</td>\n",
              "      <td>405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>143</th>\n",
              "      <td>1960</td>\n",
              "      <td>Dec</td>\n",
              "      <td>432</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a2ad77f-9e95-496d-b59c-9c407cb1024c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5a2ad77f-9e95-496d-b59c-9c407cb1024c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5a2ad77f-9e95-496d-b59c-9c407cb1024c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pass_dezembro = sns.lineplot(data=flights, x=\"year\", y=\"passengers\", palette=\"pastel\")\n",
        "pass_dezembro.set_title(\"Número de passageiros no mês de dezembro ao longo dos anos\", fontsize=14, fontweight=\"bold\")\n",
        "pass_dezembro.set(xlabel=\"Ano\", ylabel=\"Passageiros\")\n",
        "pass_dezembro.figure.set_size_inches(10,6)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "mipGlmVZpCED",
        "outputId": "406229c5-82cb-4f41-e134-08d35ddc208f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hKg9CwX6lM3r"
      },
      "source": [
        "**Insight do gráfico 2**: \n",
        "A tendência do número de passageiros no mês de dezembro ao longo dos anos é praticamente linear crescente, com alguns patamares em que os valores se mantiveram estáveis, ou seja, sem crescer, entre os anos de 1952 a 1953 e 1956 a 1958. "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ucbXdtR4dwz1"
      },
      "source": [
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OybuTdyXdxdS"
      },
      "source": [
        "## 3\\. Numero de passageiros por mês entre 1949 e 1959"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b-ssImdhdxdT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "04c4bc36-9137-48a6-aaae-960d48ae8564"
      },
      "source": [
        "import seaborn as sns\n",
        "\n",
        "data = sns.load_dataset(\"flights\")\n",
        "data.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   year month  passengers\n",
              "0  1949   Jan         112\n",
              "1  1949   Feb         118\n",
              "2  1949   Mar         132\n",
              "3  1949   Apr         129\n",
              "4  1949   May         121"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0537e347-0b24-4b2e-9004-e25d568f9ca2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949</td>\n",
              "      <td>Jan</td>\n",
              "      <td>112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949</td>\n",
              "      <td>Feb</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949</td>\n",
              "      <td>Mar</td>\n",
              "      <td>132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949</td>\n",
              "      <td>Apr</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949</td>\n",
              "      <td>May</td>\n",
              "      <td>121</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0537e347-0b24-4b2e-9004-e25d568f9ca2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0537e347-0b24-4b2e-9004-e25d568f9ca2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0537e347-0b24-4b2e-9004-e25d568f9ca2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Eg4JROvTdxdT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "71bb9ade-b65b-4a96-992d-24365297daee"
      },
      "source": [
        "# gráfico do exercício 3\n",
        "\n",
        "flights = data. query(\"1949 <= year < 1960\")\n",
        "flights\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     year month  passengers\n",
              "0    1949   Jan         112\n",
              "1    1949   Feb         118\n",
              "2    1949   Mar         132\n",
              "3    1949   Apr         129\n",
              "4    1949   May         121\n",
              "..    ...   ...         ...\n",
              "127  1959   Aug         559\n",
              "128  1959   Sep         463\n",
              "129  1959   Oct         407\n",
              "130  1959   Nov         362\n",
              "131  1959   Dec         405\n",
              "\n",
              "[132 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1941075-2779-420b-bc67-2c9bbe9d749b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>month</th>\n",
              "      <th>passengers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1949</td>\n",
              "      <td>Jan</td>\n",
              "      <td>112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1949</td>\n",
              "      <td>Feb</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1949</td>\n",
              "      <td>Mar</td>\n",
              "      <td>132</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1949</td>\n",
              "      <td>Apr</td>\n",
              "      <td>129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1949</td>\n",
              "      <td>May</td>\n",
              "      <td>121</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>127</th>\n",
              "      <td>1959</td>\n",
              "      <td>Aug</td>\n",
              "      <td>559</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128</th>\n",
              "      <td>1959</td>\n",
              "      <td>Sep</td>\n",
              "      <td>463</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>129</th>\n",
              "      <td>1959</td>\n",
              "      <td>Oct</td>\n",
              "      <td>407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>1959</td>\n",
              "      <td>Nov</td>\n",
              "      <td>362</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>1959</td>\n",
              "      <td>Dec</td>\n",
              "      <td>405</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>132 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1941075-2779-420b-bc67-2c9bbe9d749b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f1941075-2779-420b-bc67-2c9bbe9d749b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f1941075-2779-420b-bc67-2c9bbe9d749b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pass_meses = sns.lineplot(data=flights, x=\"month\", y=\"passengers\", hue='year', palette=\"bright\")\n",
        "pass_meses.set_title(\"Número de passageiros por mês entre 1949 e 1959\", fontsize=16, fontweight=\"bold\");\n",
        "pass_meses.set(xlabel=\"Mês\", ylabel=\"Passageiros\")\n",
        "pass_meses.get_legend().set_title(\"Ano\");\n",
        "pass_meses.figure.set_size_inches(10,6)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 407
        },
        "id": "j27LwFLhqvvM",
        "outputId": "5d469de0-a763-4a70-82d0-b85637a8aff9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OpIwRWGzlO8Y"
      },
      "source": [
        "**Insight do gráfico 3**:\n",
        "\n",
        "A tendência geral do gráfico é de relativa estabilidade na maior parte do ano, com picos de passageiros no mês de março e entre o período de maio a julho, com queda gradual de agosto a novembro, e nova subida em dezembro. Isso pode ser explicado pelos períodos de feriados e férias, que causam maior número de viagens.\n",
        "Os aumentos e quedas foram mais acentuados nos anos iniciais, entre 1949 a 1955, com menores variações nos anos subsequentes."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wmFKH-DAdxdU"
      },
      "source": [
        "---"
      ]
    }
  ]
}